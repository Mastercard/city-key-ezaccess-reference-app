/**
 * Mastercard Ezaccess For Issuers API
 * [![](https://mstr.cd/320oUJL)](https://developer.mastercard.com)  This is the Mastercard EzAccess for Issuers API.  This API uses OAuth 1.0a for authenticating client applications. For that, please refer to [Using OAuth 1.0a to Access Mastercard APIs](https://mstr.cd/31YcrTi).  The transport between client applications and Mastercard EzAccess service is secured using [TLS/SSL](https://w.wiki/PoA).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.4.0
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AssignCardEaid', 'model/Card', 'model/CardProgram', 'model/CardPrograms', 'model/CardProgramsAllOf', 'model/CardRange', 'model/EnrolledCard', 'model/EnrolledCardAllOf', 'model/Error', 'model/ErrorDetail', 'model/ErrorErrors', 'model/InlineResponse200', 'model/Pagination', 'model/Program', 'model/ReplaceCardEaid', 'model/UpdateCardStatus', 'api/CardOperationsApi', 'api/CardPreparationApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AssignCardEaid'), require('./model/Card'), require('./model/CardProgram'), require('./model/CardPrograms'), require('./model/CardProgramsAllOf'), require('./model/CardRange'), require('./model/EnrolledCard'), require('./model/EnrolledCardAllOf'), require('./model/Error'), require('./model/ErrorDetail'), require('./model/ErrorErrors'), require('./model/InlineResponse200'), require('./model/Pagination'), require('./model/Program'), require('./model/ReplaceCardEaid'), require('./model/UpdateCardStatus'), require('./api/CardOperationsApi'), require('./api/CardPreparationApi'));
  }
}(function(ApiClient, AssignCardEaid, Card, CardProgram, CardPrograms, CardProgramsAllOf, CardRange, EnrolledCard, EnrolledCardAllOf, Error, ErrorDetail, ErrorErrors, InlineResponse200, Pagination, Program, ReplaceCardEaid, UpdateCardStatus, CardOperationsApi, CardPreparationApi) {
  'use strict';

  /**
   * __https__mstr_cd_320oUJL_https__developer_mastercard_comThis_is_the_Mastercard_EzAccess_for_Issuers_API_This_API_uses_OAuth_1_0a_for_authenticating_client_applications__For_that_please_refer_to__Using_OAuth_1_0a_to_Access_Mastercard_APIs_https__mstr_cd_31YcrTi_The_transport_between_client_applications_and_Mastercard_EzAccess_service_is_secured_using__TLS_SSL_https__w_wiki_PoA_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var MastercardEzaccessForIssuersApi = require('index'); // See note below*.
   * var xxxSvc = new MastercardEzaccessForIssuersApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new MastercardEzaccessForIssuersApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new MastercardEzaccessForIssuersApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new MastercardEzaccessForIssuersApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AssignCardEaid model constructor.
     * @property {module:model/AssignCardEaid}
     */
    AssignCardEaid: AssignCardEaid,
    /**
     * The Card model constructor.
     * @property {module:model/Card}
     */
    Card: Card,
    /**
     * The CardProgram model constructor.
     * @property {module:model/CardProgram}
     */
    CardProgram: CardProgram,
    /**
     * The CardPrograms model constructor.
     * @property {module:model/CardPrograms}
     */
    CardPrograms: CardPrograms,
    /**
     * The CardProgramsAllOf model constructor.
     * @property {module:model/CardProgramsAllOf}
     */
    CardProgramsAllOf: CardProgramsAllOf,
    /**
     * The CardRange model constructor.
     * @property {module:model/CardRange}
     */
    CardRange: CardRange,
    /**
     * The EnrolledCard model constructor.
     * @property {module:model/EnrolledCard}
     */
    EnrolledCard: EnrolledCard,
    /**
     * The EnrolledCardAllOf model constructor.
     * @property {module:model/EnrolledCardAllOf}
     */
    EnrolledCardAllOf: EnrolledCardAllOf,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The ErrorDetail model constructor.
     * @property {module:model/ErrorDetail}
     */
    ErrorDetail: ErrorDetail,
    /**
     * The ErrorErrors model constructor.
     * @property {module:model/ErrorErrors}
     */
    ErrorErrors: ErrorErrors,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The Pagination model constructor.
     * @property {module:model/Pagination}
     */
    Pagination: Pagination,
    /**
     * The Program model constructor.
     * @property {module:model/Program}
     */
    Program: Program,
    /**
     * The ReplaceCardEaid model constructor.
     * @property {module:model/ReplaceCardEaid}
     */
    ReplaceCardEaid: ReplaceCardEaid,
    /**
     * The UpdateCardStatus model constructor.
     * @property {module:model/UpdateCardStatus}
     */
    UpdateCardStatus: UpdateCardStatus,
    /**
     * The CardOperationsApi service constructor.
     * @property {module:api/CardOperationsApi}
     */
    CardOperationsApi: CardOperationsApi,
    /**
     * The CardPreparationApi service constructor.
     * @property {module:api/CardPreparationApi}
     */
    CardPreparationApi: CardPreparationApi
  };

  return exports;
}));
